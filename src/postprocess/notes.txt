align中的Auto分几种类型

1. 单行文本/横向列表(横向可能被截断)
2. 纵向列表(纵向可能被截断)
3. flexWrap/多行文本(横向不能被截断/纵向可能被截断)
5. flex盒子(不能被截断)

// justify中的Auto不能被截断，一定是自动撑开

能被截断的就保持Auto，具体给个最大宽度或者固定宽度由开发手动指定
不能被截断的就视情况可以改成Constrained：宽度超过父节点一半


1. 如果是flexWrap和多行文本的横向不能被截断，宽度又没有超过父节点一半，则仍应设为Constrained
2. 如果是flexWrap和多行文本的纵向可能被截断，不管是靠上还是靠下，默认都让他靠上，向下撑开

检测截断尺寸
3. 列表可能被截断的情况，是否能检测到其最大宽度，然后设置overflow-auto
4. 单行文本可能被截断的情况，是否能检测到其最大宽度，然后设置overflow-ellipsis
5. 多行文本纵向可能被截断，是否能检测到最大行数，然后设置line-clamp
6. flexWrap纵向可能被截断，是否能检测到最大行数，然后设置overflow-y-auto

特殊业务需求： 多行文本是否需要处理展开/收起
优化需求: 文本检测最大宽度/行数时需要预留一点边距

裸盒子尺寸处理
1. 裸盒子是指叶节点宽高不固定，不知道如何确定其尺寸
2. 裸盒子尺寸建议先不确定，由父节点来确定
3. 如果是align方向，则根据其宽度是否超父节点一半来确定，超过即Constrained，否则Fixed
4. 如果是justify方向，则直接确定为Fixed
5. 如果是绝对定位，则根据其宽度是否超父节点一半来确定，超过即宽高都是Constrained，否则都是Fixed

ii. 如果是绝对定位且不是裸盒子，则如何确定尺寸呢？
先不考虑太多，就按原尺寸


最终只剩下Align需要处理子节点是Auto或子节点无尺寸的情况，其他算法都直接按尺寸量

A. Fixed/Constrained处理Auto
无特殊处理，Auto直接靠一边就行

B. Auto处理Auto，主要是有可能元素只靠一边，则父节点有可能无法完美撑开
1. Auto下都是Constrained
  此情况需要设置一个最小尺寸即能撑开(注意，如果是根容器横着排，子元素都是Constrained，则无需设置，因为根容器已经设置果min-h)
2. Auto下都是Fixed
  设置一个最小尺寸也可以解决
3. Auto下都是Auto
  设置一个最小尺寸也可以解决，
  
优化需求: Auto元素可能会挨着边撑开，如果没有设置overflow，则需要预留一点边距

综上，只需设置一个最小尺寸即可完美解决Auto父元素的所有情况


1. 如何处理固定定位
典型情况，标题栏
2. 给一个生成选项，生成对body弹性滚动的禁用
3. 检测弹窗的关闭按钮，改为绝对定位；检测弹窗的取消/确定按钮
4. 多行元素如果只有单行却要设置居中，如何处理

     
      Fixed
[               ]
      Fixed,
[     Auto,     ]
    Constrained
[               ]


            Fixed
[                          ]
[ Fixed, Auto, Constrained ]
[                          ]


---------------------------------------------------------------------------




    Constrained
[                ]
      Fixed,          
[     Auto,      ]
    Constrained
[                ]

        
        
        Constrained
[                          ]
[ Fixed, Auto, Constrained ]
[                          ]





---------------------------------------------------------------------------------




      Auto
[                ]
      Fixed,
[     Auto,      ]
    Constrained
[                ]




             Auto
[                          ]
[ Fixed, Auto, Constrained ]
[                          ]